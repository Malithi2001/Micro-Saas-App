name: Deploy with Monitoring

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed
    branches: [main]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build/
      
      - name: Setup monitoring configurations
        run: |
          mkdir -p monitoring
          # Create Prometheus configuration
          cat > monitoring/prometheus.yml << 'EOL'
          global:
            scrape_interval: 15s
          scrape_configs:
            - job_name: 'microsaas'
              static_configs:
                - targets: ['localhost:3000']
          EOL
          
          # Create docker-compose for monitoring stack
          cat > docker-compose.monitoring.yml << 'EOL'
          version: '3'
          services:
            prometheus:
              image: prom/prometheus:latest
              volumes:
                - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
              ports:
                - "9090:9090"
              
            grafana:
              image: grafana/grafana:latest
              ports:
                - "3001:3000"
              environment:
                - GF_SECURITY_ADMIN_PASSWORD=secret
              volumes:
                - grafana-storage:/var/lib/grafana
              depends_on:
                - prometheus
                
            loki:
              image: grafana/loki:latest
              ports:
                - "3100:3100"
            
            promtail:
              image: grafana/promtail:latest
              volumes:
                - /var/log:/var/log
              command: -config.file=/etc/promtail/config.yml
              
          volumes:
            grafana-storage:
          EOL
      
      - name: Deploy application (simulation)
        run: |
          echo "Deploying application to production environment..."
          # In a real scenario, you would use tools like Ansible, Terraform, or cloud-specific deployment tools
          sleep 5
          echo "Application deployed successfully!"
      
      - name: Deploy monitoring stack (simulation)
        run: |
          echo "Starting monitoring stack..."
          # In a real scenario, you would use docker-compose up -d or deploy to Kubernetes
          echo "Monitoring stack deployed successfully!"
